#/usr/bin/env bash

function _ruby_binary_path() {
  readlink -f $(which ruby)
}

function _ruby_binary_version_tag() {
  local current_version=unknown

  case "$(_ruby_binary_path)" in
    /System/*)
      current_version=system
      ;;
    /opt/local/bin/ruby*)
      current_version=${real_file##*/}
      current_version=${current_version/ruby/}
      ;;
  esac

  echo -en ${current_version}
}

function _ruby_binary_type() {
  local type=unknown
  case "$(_ruby_binary_path)" in
    /System/*) type=system ;;
    /opt/local/bin/ruby*) type=ports ;;
  esac
  echo -en ${type}
}

function _current_index() {
  local index= current_version=$(_ruby_binary_version_tag)

  for (( i = 1 ; i < ${#VERSIONS[@]}; i++ )); do
    if [ "${current_version}" = "${VERSIONS[$i]}" ]; then
      index=$i
    fi
  done

  echo -n ${index:-0}
}

function _next_index() {
  local index="$(_current_index)"
  local next_index=$((index + 1))

  if [ ${next_index} -ge ${#VERSIONS[@]} ]; then
    next_index=0
  fi
  echo -n ${next_index}
}

function _switch_ruby_version() {
  local version=${1:-next}

  case "${version}" in
    1.[89]|2.[012])
      for file in "${RUBY_FILES[@]}"; do
        sudo ln -snf /opt/local/bin/${file}${version} /opt/local/bin/${file/-}
      done
      ;;
    system)
      for file in "${RUBY_FILES[@]}"; do
        [ -s /opt/local/bin/${file} ] && sudo rm -f /opt/local/bin/${file}
      done
      ;;
    next)
      local next_index=$(_next_index)

      if [ -z "${next_index}" ]; then
        echo "Couldn't determine next version to switch to - use explicit name"
        exit 1
      else
        echo "Switching version to ${VERSIONS[${next_index}]}"
        _switch_ruby_version "${VERSIONS[${next_index}]}"
      fi
      ;;
    *) echo "Unknown version: ${version}"; exit 1;;
  esac
}

function current_version() {
  echo -en "$(ruby -v | awk '{ print $2 }') ($(_ruby_binary_type))"
}

RUBY_FILES=(erb gem irb rake rdoc ri ruby testrb)
VERSIONS=(system)

for version in $(ls --color=no /opt/local/bin/ruby* |xargs -i basename {} | sed -e 's/ruby//g'); do
  VERSIONS+=(${version})
done

while getopts ':vV:' opt; do
  case "${opt}" in
    v)
      echo "Installed Versions: ${VERSIONS[@]}"
      echo "Current Version: $(current_version)"
      exit
      ;;
    V)
      case "${OPTARG}" in
        os|system) use_version=system;;
        18) use_version=1.8;;
        19) use_version=1.9;;
        20) use_version=2.0;;
         *) echo "Version ${OPTARG} not found."; exit 1;;
      esac
      ;;
  esac
done

_switch_ruby_version ${use_version:-$1}

for prog in ${RUBY_FILES[@]}; do
  hash -d "${prog}" &>-
  type "${prog}" &>-
done

echo "Now using Ruby Version: $(current_version)"
