#!/usr/bin/env bash

function readlink() {
  local _readlink="$(which readlink)"

  if ${_readlink} --version . 2>&1 | grep -q GNU
    ${_readlink} -f "$@"
  else
    perl -e "use Cwd qw(abs_path); print abs_path(glob('$@'));"
  fi
}

function setup() {
  set -e

  local script_path="$(dirname $(readlink $0))"
  local funcpath="${script_path}/functions.d"

  local fq_initscript_path="${HOME}/.init-scripts"
  local initscripts="~/.init-scripts"

  local init_path="${initscripts}/init.sh"
  local pre_init="${initscripts}/pre-init"
  local post_init="${initscripts}/post-init"

  source ${funcpath}/00-color.functions

  if [ ! -d ${fq_initscript_path} ]; then
    if [ ! -s ${fq_initscript_path} ]; then
      brightgreen "Symlinking $(cyan ${initscripts}) -> $(cyan ${script_path})"
      ln -snf "${script_path}" ${fq_initscript_path}
    fi
  fi

  if  ! grep -qe "${init_path}" "${HOME}/.bashrc"; then
    echo "$(brightgreen "adding") $(default_color "initialize script to") $(magenta "${HOME}/.bashrc")"
    echo "[ -f ${init_path} ] && source ${init_path}" >> ~/.bashrc
  fi

  if ! grep -qe "\.bashrc" "${HOME}/.bash_profile"; then
    echo "[ -f ~/.bashrc ] && source ~/.bashrc" >> ~/.bash_profile
  fi

  if [ ! -d "${HOME}/bin" ]; then
    ln -snf "${script_path}/bin" "${HOME}/bin"
  fi

  if [ ! -d "${HOME}/.bash_completion.d" ]; then
    ln -snf "${script_path}/3rdparty.d/bash_completion.d" ~/.bash_completion.d
  fi

  echo "Setup complete - please reopen your console, or type: source ~/.bashrc"
  echo "Note: the provided prompt works best with a black/gray background/foreground."
}

setup
unset setup readlink
